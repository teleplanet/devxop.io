(function () {
    'use strict';

    function noop() { }
    function run(fn) {
        return fn();
    }
    function blank_object() {
        return Object.create(null);
    }
    function run_all(fns) {
        fns.forEach(run);
    }
    function is_function(thing) {
        return typeof thing === 'function';
    }
    function safe_not_equal(a, b) {
        return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
    }

    function append(target, node) {
        target.appendChild(node);
    }
    function insert(target, node, anchor) {
        target.insertBefore(node, anchor || null);
    }
    function detach(node) {
        node.parentNode.removeChild(node);
    }
    function element(name) {
        return document.createElement(name);
    }
    function text(data) {
        return document.createTextNode(data);
    }
    function space() {
        return text(' ');
    }
    function empty() {
        return text('');
    }
    function listen(node, event, handler, options) {
        node.addEventListener(event, handler, options);
        return () => node.removeEventListener(event, handler, options);
    }
    function attr(node, attribute, value) {
        if (value == null)
            node.removeAttribute(attribute);
        else
            node.setAttribute(attribute, value);
    }
    function children(element) {
        return Array.from(element.childNodes);
    }
    function set_data(text, data) {
        data = '' + data;
        if (text.data !== data)
            text.data = data;
    }
    function custom_event(type, detail) {
        const e = document.createEvent('CustomEvent');
        e.initCustomEvent(type, false, false, detail);
        return e;
    }

    let current_component;
    function set_current_component(component) {
        current_component = component;
    }
    function get_current_component() {
        if (!current_component)
            throw new Error(`Function called outside component initialization`);
        return current_component;
    }
    function onMount(fn) {
        get_current_component().$$.on_mount.push(fn);
    }
    function createEventDispatcher() {
        const component = current_component;
        return (type, detail) => {
            const callbacks = component.$$.callbacks[type];
            if (callbacks) {
                // TODO are there situations where events could be dispatched
                // in a server (non-DOM) environment?
                const event = custom_event(type, detail);
                callbacks.slice().forEach(fn => {
                    fn.call(component, event);
                });
            }
        };
    }

    const dirty_components = [];
    const resolved_promise = Promise.resolve();
    let update_scheduled = false;
    const binding_callbacks = [];
    const render_callbacks = [];
    const flush_callbacks = [];
    function schedule_update() {
        if (!update_scheduled) {
            update_scheduled = true;
            resolved_promise.then(flush);
        }
    }
    function add_render_callback(fn) {
        render_callbacks.push(fn);
    }
    function flush() {
        const seen_callbacks = new Set();
        do {
            // first, call beforeUpdate functions
            // and update components
            while (dirty_components.length) {
                const component = dirty_components.shift();
                set_current_component(component);
                update(component.$$);
            }
            while (binding_callbacks.length)
                binding_callbacks.shift()();
            // then, once components are updated, call
            // afterUpdate functions. This may cause
            // subsequent updates...
            while (render_callbacks.length) {
                const callback = render_callbacks.pop();
                if (!seen_callbacks.has(callback)) {
                    callback();
                    // ...so guard against infinite loops
                    seen_callbacks.add(callback);
                }
            }
        } while (dirty_components.length);
        while (flush_callbacks.length) {
            flush_callbacks.pop()();
        }
        update_scheduled = false;
    }
    function update($$) {
        if ($$.fragment) {
            $$.update($$.dirty);
            run_all($$.before_render);
            $$.fragment.p($$.dirty, $$.ctx);
            $$.dirty = null;
            $$.after_render.forEach(add_render_callback);
        }
    }
    const outroing = new Set();
    function transition_in(block, local) {
        if (block && block.i) {
            outroing.delete(block);
            block.i(local);
        }
    }
    function mount_component(component, target, anchor) {
        const { fragment, on_mount, on_destroy, after_render } = component.$$;
        fragment.m(target, anchor);
        // onMount happens after the initial afterUpdate. Because
        // afterUpdate callbacks happen in reverse order (inner first)
        // we schedule onMount callbacks before afterUpdate callbacks
        add_render_callback(() => {
            const new_on_destroy = on_mount.map(run).filter(is_function);
            if (on_destroy) {
                on_destroy.push(...new_on_destroy);
            }
            else {
                // Edge case - component was destroyed immediately,
                // most likely as a result of a binding initialising
                run_all(new_on_destroy);
            }
            component.$$.on_mount = [];
        });
        after_render.forEach(add_render_callback);
    }
    function destroy_component(component, detaching) {
        if (component.$$.fragment) {
            run_all(component.$$.on_destroy);
            if (detaching)
                component.$$.fragment.d(1);
            // TODO null out other refs, including component.$$ (but need to
            // preserve final state?)
            component.$$.on_destroy = component.$$.fragment = null;
            component.$$.ctx = {};
        }
    }
    function make_dirty(component, key) {
        if (!component.$$.dirty) {
            dirty_components.push(component);
            schedule_update();
            component.$$.dirty = blank_object();
        }
        component.$$.dirty[key] = true;
    }
    function init(component, options, instance, create_fragment, not_equal$$1, prop_names) {
        const parent_component = current_component;
        set_current_component(component);
        const props = options.props || {};
        const $$ = component.$$ = {
            fragment: null,
            ctx: null,
            // state
            props: prop_names,
            update: noop,
            not_equal: not_equal$$1,
            bound: blank_object(),
            // lifecycle
            on_mount: [],
            on_destroy: [],
            before_render: [],
            after_render: [],
            context: new Map(parent_component ? parent_component.$$.context : []),
            // everything else
            callbacks: blank_object(),
            dirty: null
        };
        let ready = false;
        $$.ctx = instance
            ? instance(component, props, (key, value) => {
                if ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {
                    if ($$.bound[key])
                        $$.bound[key](value);
                    if (ready)
                        make_dirty(component, key);
                }
            })
            : props;
        $$.update();
        ready = true;
        run_all($$.before_render);
        $$.fragment = create_fragment($$.ctx);
        if (options.target) {
            if (options.hydrate) {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment.l(children(options.target));
            }
            else {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment.c();
            }
            if (options.intro)
                transition_in(component.$$.fragment);
            mount_component(component, options.target, options.anchor);
            flush();
        }
        set_current_component(parent_component);
    }
    class SvelteComponent {
        $destroy() {
            destroy_component(this, 1);
            this.$destroy = noop;
        }
        $on(type, callback) {
            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
            callbacks.push(callback);
            return () => {
                const index = callbacks.indexOf(callback);
                if (index !== -1)
                    callbacks.splice(index, 1);
            };
        }
        $set() {
            // overridden by instance, if it has props
        }
    }

    function unwrapExports (x) {
    	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
    }

    function createCommonjsModule(fn, module) {
    	return module = { exports: {} }, fn(module, module.exports), module.exports;
    }

    var cookieUniversalCommon = createCommonjsModule(function (module) {
    module.exports=function(e){function t(o){if(r[o])return r[o].exports;var n=r[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,t),n.l=!0,n.exports}var r={};return t.m=e,t.c=r,t.d=function(e,r,o){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:o});},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,r){var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n=r(1);e.exports=function(t,r){var i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],a="object"===("undefined"==typeof document?"undefined":o(document))&&"string"==typeof document.cookie,s="object"===(void 0===t?"undefined":o(t))&&"object"===(void 0===r?"undefined":o(r))&&void 0!==e,u=!a&&!s||a&&s,f=function(e){if(s){var o=t.headers.cookie||"";return e&&(o=r.getHeaders(),o=o["set-cookie"]?o["set-cookie"].map(function(e){return e.split(";")[0]}).join(";"):""),o}if(a)return document.cookie||""},c=function(){var e=r.getHeader("Set-Cookie");return (e="string"==typeof e?[e]:e)||[]},p=function(e){return r.setHeader("Set-Cookie",e)},d=function(e,t){if(!t)return e;try{return JSON.parse(e)}catch(t){return e}},l={parseJSON:i,set:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{path:"/"};if(!u)if(t="object"===(void 0===t?"undefined":o(t))?JSON.stringify(t):t,s){var i=c();i.push(n.serialize(e,t,r)),p(i);}else document.cookie=n.serialize(e,t,r);},setAll:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];u||Array.isArray(e)&&e.forEach(function(e){var t=e.name,r=void 0===t?"":t,o=e.value,n=void 0===o?"":o,i=e.opts,a=void 0===i?{path:"/"}:i;l.set(r,n,a);});},get:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{fromRes:!1,parseJSON:l.parseJSON};if(u)return "";var r=n.parse(f(t.fromRes)),o=r[e];return d(o,t.parseJSON)},getAll:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{fromRes:!1,parseJSON:l.parseJSON};if(u)return {};var t=n.parse(f(e.fromRes));for(var r in t)t[r]=d(t[r],e.parseJSON);return t},remove:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{path:"/"};if(!u){var r=l.get(e);t.expires=new Date(0),r&&l.set(e,"",t);}},removeAll:function(){if(!u){var e=n.parse(f());for(var t in e)l.remove(t);}},nodeCookie:n};return l};},function(e,t,r){function o(e,t){if("string"!=typeof e)throw new TypeError("argument str must be a string");for(var r={},o=t||{},n=e.split(u),s=o.decode||a,f=0;f<n.length;f++){var c=n[f],p=c.indexOf("=");if(!(p<0)){var d=c.substr(0,p).trim(),l=c.substr(++p,c.length).trim();'"'==l[0]&&(l=l.slice(1,-1)),void 0==r[d]&&(r[d]=i(l,s));}}return r}function n(e,t,r){var o=r||{},n=o.encode||s;if("function"!=typeof n)throw new TypeError("option encode is invalid");if(!f.test(e))throw new TypeError("argument name is invalid");var i=n(t);if(i&&!f.test(i))throw new TypeError("argument val is invalid");var a=e+"="+i;if(null!=o.maxAge){var u=o.maxAge-0;if(isNaN(u))throw new Error("maxAge should be a Number");a+="; Max-Age="+Math.floor(u);}if(o.domain){if(!f.test(o.domain))throw new TypeError("option domain is invalid");a+="; Domain="+o.domain;}if(o.path){if(!f.test(o.path))throw new TypeError("option path is invalid");a+="; Path="+o.path;}if(o.expires){if("function"!=typeof o.expires.toUTCString)throw new TypeError("option expires is invalid");a+="; Expires="+o.expires.toUTCString();}if(o.httpOnly&&(a+="; HttpOnly"),o.secure&&(a+="; Secure"),o.sameSite){switch("string"==typeof o.sameSite?o.sameSite.toLowerCase():o.sameSite){case!0:a+="; SameSite=Strict";break;case"lax":a+="; SameSite=Lax";break;case"strict":a+="; SameSite=Strict";break;default:throw new TypeError("option sameSite is invalid")}}return a}function i(e,t){try{return t(e)}catch(t){return e}}/*!
     * cookie
     * Copyright(c) 2012-2014 Roman Shtylman
     * Copyright(c) 2015 Douglas Christopher Wilson
     * MIT Licensed
     */
    t.parse=o,t.serialize=n;var a=decodeURIComponent,s=encodeURIComponent,u=/; */,f=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;}]);
    });

    var Cookie = unwrapExports(cookieUniversalCommon);

    var validate = function (choice, cookie) {
      const choices = Object.keys(choice);
      const chosen = Object.keys(cookie.choices);

      if (chosen.length !== choices.length) {
        return false
      }

      return chosen.every(c => choices.includes(c))
    };

    /* src/components/banner.svelte generated by Svelte v3.5.4 */

    function add_css() {
    	var style = element("style");
    	style.id = 'svelte-18ic9ek-style';
    	style.textContent = "h1.svelte-18ic9ek{font-size:18px;font-weight:bold;margin:0}h2.svelte-18ic9ek{font-size:14px;line-height:16px}h1.svelte-18ic9ek,h2.svelte-18ic9ek,label.svelte-18ic9ek,button.svelte-18ic9ek{color:#fff}.wrapper.svelte-18ic9ek{z-index:99999;position:fixed;bottom:0;display:flex;flex-direction:row;width:100vw;background-color:rgba(7, 9, 15, 0.75);color:#fff;padding:20px}.text.svelte-18ic9ek{margin-right:20px}.right.svelte-18ic9ek{display:flex;flex-direction:column;justify-content:center;min-width:200px;text-align:center;flex-grow:1}ul.svelte-18ic9ek{display:inline-block;list-style-type:none;margin:0;padding:0}ul.svelte-18ic9ek>li.svelte-18ic9ek{display:inline-block}.operations.svelte-18ic9ek{text-align:left}input[type=\"checkbox\"].svelte-18ic9ek{display:none}input[type=\"checkbox\"]+label.svelte-18ic9ek{display:block;position:relative;padding-left:35px;padding-right:15px;margin-bottom:10px;font-size:14px/20px;cursor:pointer;user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}input[type=\"checkbox\"]+label.svelte-18ic9ek:before{content:'';display:block;width:20px;height:20px;border:1px solid #D6C3C9;position:absolute;left:0;top:0;opacity:.6;-webkit-transition:all .12s, border-color .08s;transition:all .12s, border-color .08s}input[type=\"checkbox\"]:checked+label.svelte-18ic9ek:before{width:10px;top:-5px;left:5px;border-radius:0;opacity:1;border-top-color:transparent;border-left-color:transparent;-webkit-transform:rotate(45deg);transform:rotate(45deg)}button.svelte-18ic9ek{font-size:14px;max-width:200px;text-transform:uppercase;font-weight:bold;padding:1vh 1vw;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0, 0, 0, 0.25);border-radius:4px;background-color:#ff9273;border:0;border:4px solid #ff9273;cursor:pointer;transition:all 0.3s ease}button.svelte-18ic9ek:hover{background-color:#fff;color:#ff9273}@media only screen and (max-width: 600px){.wrapper.svelte-18ic9ek{flex-direction:column}.operations.svelte-18ic9ek{margin-bottom:35px}button.svelte-18ic9ek{max-width:100vw;margin-bottom:2vh}}";
    	append(document.head, style);
    }

    // (1:0) {#if shown}
    function create_if_block(ctx) {
    	var div4, div2, div0, h1, t0, t1, h2, t2, div1, ul, t3, t4, t5, t6, div3, button, dispose;

    	var if_block0 = (ctx.choices.hasOwnProperty('necessary')) && create_if_block_4(ctx);

    	var if_block1 = (ctx.choices.hasOwnProperty('tracking')) && create_if_block_3(ctx);

    	var if_block2 = (ctx.choices.hasOwnProperty('analytics')) && create_if_block_2(ctx);

    	var if_block3 = (ctx.choices.hasOwnProperty('marketing')) && create_if_block_1(ctx);

    	return {
    		c() {
    			div4 = element("div");
    			div2 = element("div");
    			div0 = element("div");
    			h1 = element("h1");
    			t0 = text(ctx.heading);
    			t1 = space();
    			h2 = element("h2");
    			t2 = space();
    			div1 = element("div");
    			ul = element("ul");
    			if (if_block0) if_block0.c();
    			t3 = space();
    			if (if_block1) if_block1.c();
    			t4 = space();
    			if (if_block2) if_block2.c();
    			t5 = space();
    			if (if_block3) if_block3.c();
    			t6 = space();
    			div3 = element("div");
    			button = element("button");
    			button.textContent = "Accept";
    			attr(h1, "class", "svelte-18ic9ek");
    			attr(h2, "class", "svelte-18ic9ek");
    			attr(div0, "class", "text svelte-18ic9ek");
    			attr(ul, "class", "svelte-18ic9ek");
    			attr(div1, "class", "operations svelte-18ic9ek");
    			attr(div2, "class", "left");
    			attr(button, "type", "button");
    			attr(button, "class", "svelte-18ic9ek");
    			attr(div3, "class", "right svelte-18ic9ek");
    			attr(div4, "class", "wrapper svelte-18ic9ek");
    			dispose = listen(button, "click", ctx.choose);
    		},

    		m(target, anchor) {
    			insert(target, div4, anchor);
    			append(div4, div2);
    			append(div2, div0);
    			append(div0, h1);
    			append(h1, t0);
    			append(div0, t1);
    			append(div0, h2);
    			h2.innerHTML = ctx.description;
    			append(div2, t2);
    			append(div2, div1);
    			append(div1, ul);
    			if (if_block0) if_block0.m(ul, null);
    			append(ul, t3);
    			if (if_block1) if_block1.m(ul, null);
    			append(ul, t4);
    			if (if_block2) if_block2.m(ul, null);
    			append(ul, t5);
    			if (if_block3) if_block3.m(ul, null);
    			append(div4, t6);
    			append(div4, div3);
    			append(div3, button);
    		},

    		p(changed, ctx) {
    			if (changed.heading) {
    				set_data(t0, ctx.heading);
    			}

    			if (changed.description) {
    				h2.innerHTML = ctx.description;
    			}

    			if (ctx.choices.hasOwnProperty('necessary')) {
    				if (if_block0) {
    					if_block0.p(changed, ctx);
    				} else {
    					if_block0 = create_if_block_4(ctx);
    					if_block0.c();
    					if_block0.m(ul, t3);
    				}
    			} else if (if_block0) {
    				if_block0.d(1);
    				if_block0 = null;
    			}

    			if (ctx.choices.hasOwnProperty('tracking')) {
    				if (if_block1) {
    					if_block1.p(changed, ctx);
    				} else {
    					if_block1 = create_if_block_3(ctx);
    					if_block1.c();
    					if_block1.m(ul, t4);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}

    			if (ctx.choices.hasOwnProperty('analytics')) {
    				if (if_block2) {
    					if_block2.p(changed, ctx);
    				} else {
    					if_block2 = create_if_block_2(ctx);
    					if_block2.c();
    					if_block2.m(ul, t5);
    				}
    			} else if (if_block2) {
    				if_block2.d(1);
    				if_block2 = null;
    			}

    			if (ctx.choices.hasOwnProperty('marketing')) {
    				if (if_block3) {
    					if_block3.p(changed, ctx);
    				} else {
    					if_block3 = create_if_block_1(ctx);
    					if_block3.c();
    					if_block3.m(ul, null);
    				}
    			} else if (if_block3) {
    				if_block3.d(1);
    				if_block3 = null;
    			}
    		},

    		d(detaching) {
    			if (detaching) {
    				detach(div4);
    			}

    			if (if_block0) if_block0.d();
    			if (if_block1) if_block1.d();
    			if (if_block2) if_block2.d();
    			if (if_block3) if_block3.d();
    			dispose();
    		}
    	};
    }

    // (10:8) {#if choices.hasOwnProperty('necessary')}
    function create_if_block_4(ctx) {
    	var li, input, t, label, dispose;

    	return {
    		c() {
    			li = element("li");
    			input = element("input");
    			t = space();
    			label = element("label");
    			label.textContent = "Neccessary Cookies";
    			attr(input, "type", "checkbox");
    			attr(input, "id", "gdpr-check-necessary");
    			input.disabled = true;
    			attr(input, "class", "svelte-18ic9ek");
    			attr(label, "for", "gdpr-check-necessary");
    			attr(label, "class", "svelte-18ic9ek");
    			attr(li, "class", "svelte-18ic9ek");
    			dispose = listen(input, "change", ctx.input_change_handler);
    		},

    		m(target, anchor) {
    			insert(target, li, anchor);
    			append(li, input);

    			input.checked = ctx.choices.necessary;

    			append(li, t);
    			append(li, label);
    		},

    		p(changed, ctx) {
    			if (changed.choices) input.checked = ctx.choices.necessary;
    		},

    		d(detaching) {
    			if (detaching) {
    				detach(li);
    			}

    			dispose();
    		}
    	};
    }

    // (16:8) {#if choices.hasOwnProperty('tracking')}
    function create_if_block_3(ctx) {
    	var li, input, t, label, dispose;

    	return {
    		c() {
    			li = element("li");
    			input = element("input");
    			t = space();
    			label = element("label");
    			label.textContent = "Tracking Cookies";
    			attr(input, "type", "checkbox");
    			attr(input, "id", "gdpr-check-tracking");
    			attr(input, "class", "svelte-18ic9ek");
    			attr(label, "for", "gdpr-check-tracking");
    			attr(label, "class", "svelte-18ic9ek");
    			attr(li, "class", "svelte-18ic9ek");
    			dispose = listen(input, "change", ctx.input_change_handler_1);
    		},

    		m(target, anchor) {
    			insert(target, li, anchor);
    			append(li, input);

    			input.checked = ctx.choices.tracking;

    			append(li, t);
    			append(li, label);
    		},

    		p(changed, ctx) {
    			if (changed.choices) input.checked = ctx.choices.tracking;
    		},

    		d(detaching) {
    			if (detaching) {
    				detach(li);
    			}

    			dispose();
    		}
    	};
    }

    // (22:8) {#if choices.hasOwnProperty('analytics')}
    function create_if_block_2(ctx) {
    	var li, input, t, label, dispose;

    	return {
    		c() {
    			li = element("li");
    			input = element("input");
    			t = space();
    			label = element("label");
    			label.textContent = "Analytics Cookies";
    			attr(input, "type", "checkbox");
    			attr(input, "id", "gdpr-check-analytics");
    			attr(input, "class", "svelte-18ic9ek");
    			attr(label, "for", "gdpr-check-analytics");
    			attr(label, "class", "svelte-18ic9ek");
    			attr(li, "class", "svelte-18ic9ek");
    			dispose = listen(input, "change", ctx.input_change_handler_2);
    		},

    		m(target, anchor) {
    			insert(target, li, anchor);
    			append(li, input);

    			input.checked = ctx.choices.analytics;

    			append(li, t);
    			append(li, label);
    		},

    		p(changed, ctx) {
    			if (changed.choices) input.checked = ctx.choices.analytics;
    		},

    		d(detaching) {
    			if (detaching) {
    				detach(li);
    			}

    			dispose();
    		}
    	};
    }

    // (28:8) {#if choices.hasOwnProperty('marketing')}
    function create_if_block_1(ctx) {
    	var li, input, t, label, dispose;

    	return {
    		c() {
    			li = element("li");
    			input = element("input");
    			t = space();
    			label = element("label");
    			label.textContent = "Marketing Cookies";
    			attr(input, "type", "checkbox");
    			attr(input, "id", "gdpr-check-marketing");
    			attr(input, "class", "svelte-18ic9ek");
    			attr(label, "for", "gdpr-check-marketing");
    			attr(label, "class", "svelte-18ic9ek");
    			attr(li, "class", "svelte-18ic9ek");
    			dispose = listen(input, "change", ctx.input_change_handler_3);
    		},

    		m(target, anchor) {
    			insert(target, li, anchor);
    			append(li, input);

    			input.checked = ctx.choices.marketing;

    			append(li, t);
    			append(li, label);
    		},

    		p(changed, ctx) {
    			if (changed.choices) input.checked = ctx.choices.marketing;
    		},

    		d(detaching) {
    			if (detaching) {
    				detach(li);
    			}

    			dispose();
    		}
    	};
    }

    function create_fragment(ctx) {
    	var if_block_anchor;

    	var if_block = (ctx.shown) && create_if_block(ctx);

    	return {
    		c() {
    			if (if_block) if_block.c();
    			if_block_anchor = empty();
    		},

    		m(target, anchor) {
    			if (if_block) if_block.m(target, anchor);
    			insert(target, if_block_anchor, anchor);
    		},

    		p(changed, ctx) {
    			if (ctx.shown) {
    				if (if_block) {
    					if_block.p(changed, ctx);
    				} else {
    					if_block = create_if_block(ctx);
    					if_block.c();
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}
    		},

    		i: noop,
    		o: noop,

    		d(detaching) {
    			if (if_block) if_block.d(detaching);

    			if (detaching) {
    				detach(if_block_anchor);
    			}
    		}
    	};
    }

    function instance($$self, $$props, $$invalidate) {
    	

      const dispatch = createEventDispatcher();

      const cookies = Cookie();

      let { cookieName = null } = $$props;

      let shown = false;

      let { heading = 'GDPR Notice', description = "We use cookies to offer a better browsing experience, analyze site traffic, personalize content, and serve targeted advertisements. Please review our privacy policy & cookies information page. By clicking accept, you consent to our privacy policy & use of cookies.", categories = {
        analytics: function () {
        },
        tracking: function () {
        },
        marketing: function () {
        },
        necessary: function () {
        }
      } } = $$props;

      let { cookieConfig = {}, choices = {
        necessary: true,
        marketing: true,
        analytics: true,
        tracking: true
      } } = $$props;

      onMount(() => {
        if (!cookieName) {
          throw('You must set gdpr cookie name')
        }

        const cookie = cookies.get(cookieName);
        if (cookie && chosenMatchesChoice(cookie)) {
          execute(cookie.choices);
        } else {
          removeCookie();
          $$invalidate('shown', shown = true);
        }
      });

      function setCookie (choices) {
        const expires = new Date();
        expires.setDate(expires.getDate() + 365);

        const options = Object.assign({}, cookieConfig, { expires });
        cookies.set(cookieName, { choices }, options);
      }

      function removeCookie () {
        const { path } = cookieConfig;
        cookies.remove(cookieName, Object.assign({}, path ? { path } : {}));
      }

      function chosenMatchesChoice (cookie) {
        return validate(choices, cookie)
      }

      function execute (chosen) {
        const types = Object.keys(choices);

        types
        .forEach(t => {
          const agreed = chosen[t];
          if (agreed) {
            categories[t]();
            dispatch(`${t}`);
          }
        });
        $$invalidate('shown', shown = false);
      }

      function choose () {
        setCookie(choices);
        execute(choices);
      }

    	function input_change_handler() {
    		choices.necessary = this.checked;
    		$$invalidate('choices', choices);
    	}

    	function input_change_handler_1() {
    		choices.tracking = this.checked;
    		$$invalidate('choices', choices);
    	}

    	function input_change_handler_2() {
    		choices.analytics = this.checked;
    		$$invalidate('choices', choices);
    	}

    	function input_change_handler_3() {
    		choices.marketing = this.checked;
    		$$invalidate('choices', choices);
    	}

    	$$self.$set = $$props => {
    		if ('cookieName' in $$props) $$invalidate('cookieName', cookieName = $$props.cookieName);
    		if ('heading' in $$props) $$invalidate('heading', heading = $$props.heading);
    		if ('description' in $$props) $$invalidate('description', description = $$props.description);
    		if ('categories' in $$props) $$invalidate('categories', categories = $$props.categories);
    		if ('cookieConfig' in $$props) $$invalidate('cookieConfig', cookieConfig = $$props.cookieConfig);
    		if ('choices' in $$props) $$invalidate('choices', choices = $$props.choices);
    	};

    	return {
    		cookieName,
    		shown,
    		heading,
    		description,
    		categories,
    		cookieConfig,
    		choices,
    		choose,
    		input_change_handler,
    		input_change_handler_1,
    		input_change_handler_2,
    		input_change_handler_3
    	};
    }

    class Banner extends SvelteComponent {
    	constructor(options) {
    		super();
    		if (!document.getElementById("svelte-18ic9ek-style")) add_css();
    		init(this, options, instance, create_fragment, safe_not_equal, ["cookieName", "heading", "description", "categories", "cookieConfig", "choices"]);
    	}
    }

    function attachBanner (target, data = {}) {
      const banner = new Banner({
        target,
        data
      });
    }

    window.GdprConsent = window.GdprConsent || {};
    window.GdprConsent.attachBanner = attachBanner;

}());
